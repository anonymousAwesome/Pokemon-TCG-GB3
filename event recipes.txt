        #make the NPC walk right 2 tiles
        self.event_manager.add_event(self.sprite.cutscene_walk,["right"])
        self.event_manager.add_event(self.sprite.start_walking,[4])
        self.event_manager.add_event(self.sprite.continue_walking,[4],persistent_condition=self.sprite.still_walking)
        self.event_manager.add_event(self.sprite.start_walking,[4])
        self.event_manager.add_event(self.sprite.continue_walking,[4],persistent_condition=self.sprite.still_walking)
        self.event_manager.add_event(self.map_input_lock.unlock)
        self.map_input_lock.lock()

Note: the 4 is the speed of the character movement. Increase or decrease it to 8 or 2 for faster or slower movement.

		#make the player walk right one tile
        self.event_manager.add_event(self.player_character.cutscene_walk,["right"])
        self.event_manager.add_event(self.player_character.start_walking,[4])
        self.event_manager.add_event(self.player_character.continue_walking,[4],persistent_condition=self.player_character.still_walking)
        self.event_manager.add_event(self.map_input_lock.unlock)
        self.map_input_lock.lock()


		#dialogue, no name or image
        self.event_manager.add_event(dialogue_facing,[self.player_character,self])
        self.event_manager.add_event(self.current_dialogue.__init__,[self.screen,"Welcome! I'm Dr. Mason, with a PhD in Pokemon cardology!"])
        self.event_manager.add_event(self.current_dialogue.render,[event_list],persistent_condition=self.current_dialogue.check_remaining_text)
        self.event_manager.add_event(self.map_input_lock.unlock)
        self.map_input_lock.lock()


        #pause for 60 frames; 1 sec.
        self.event_manager.add_event(empty_event.__init__,[60])
        self.event_manager.add_event(empty_event.decrement_loops,persistent_condition=empty_event.check_still_looping)
        self.event_manager.add_event(self.map_input_lock.unlock) #not sure if necessary?
        self.map_input_lock.lock()


        #dialogue with name and image        

        #add to __init__:
        self.photo_location=os.path.join("assets", "duellists", "Charity.png")

        #then, in interact_object:
        self.event_manager.add_event(dialogue_facing,[self.player_character,self])
        self.event_manager.add_event(self.current_dialogue.__init__,[self.screen,"Welcome to the trading post.\nWould you like to make a trade?"],{"name_text":"Charity","photo_location":self.photo_location})
        self.event_manager.add_event(self.current_dialogue.render,[event_list],persistent_condition=self.current_dialogue.check_remaining_text)
        self.event_manager.add_event(self.map_input_lock.unlock)
        self.map_input_lock.lock()
